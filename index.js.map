{"version":3,"file":"index.js","sources":["src/index.js"],"sourcesContent":["export const CLEAR = Symbol();\r\nexport const BREAK = Symbol();\r\nexport const CONTINUE = Symbol();\r\n\r\nexport const promiseIgnore = new Promise(() => {});\r\n\r\nexport function consumer(value, payload, process, id, subscribe) {\r\n\treturn Promise.resolve(value).then(value => {\r\n\t\tif (typeof value == \"function\") {\r\n\t\t\treturn consumer(\r\n\t\t\t\tvalue(process.state, payload),\r\n\t\t\t\tnull,\r\n\t\t\t\tprocess,\r\n\t\t\t\tid,\r\n\t\t\t\tsubscribe\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (typeof value == \"object\" && typeof value.next == \"function\") {\r\n\t\t\treturn new Promise(resolve => {\r\n\t\t\t\tfunction scan(generator) {\r\n\t\t\t\t\tPromise.resolve(generator.next(process.state)).then(\r\n\t\t\t\t\t\t({ value, done }) =>\r\n\t\t\t\t\t\t\tconsumer(value, null, process, id, subscribe).then(\r\n\t\t\t\t\t\t\t\t() =>\r\n\t\t\t\t\t\t\t\t\tdone\r\n\t\t\t\t\t\t\t\t\t\t? resolve(process.state)\r\n\t\t\t\t\t\t\t\t\t\t: scan(generator)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tscan(value);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn process.next(value, id, subscribe);\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {*} state  - initial state\r\n */\r\nexport function State(state) {\r\n\tlet id = 0;\r\n\r\n\tlet ignore = {};\r\n\tlet currentFocus;\r\n\tlet process = {\r\n\t\tstate,\r\n\t\tnext,\r\n\t\tsend\r\n\t};\r\n\r\n\tfunction next(value, id, subscribe) {\r\n\t\tswitch (value) {\r\n\t\t\tcase CLEAR:\r\n\t\t\t\tcurrentFocus = id;\r\n\t\t\t\treturn process.state;\r\n\t\t\tcase BREAK:\r\n\t\t\t\tignore[id] = true;\r\n\t\t\t\treturn process.state;\r\n\t\t\tcase CONTINUE:\r\n\t\t\t\treturn process.state;\r\n\t\t}\r\n\r\n\t\tif (currentFocus != null && currentFocus != id) return promiseIgnore;\r\n\r\n\t\tif (ignore[id]) return promiseIgnore;\r\n\r\n\t\tprocess.state = value;\r\n\r\n\t\tsubscribe && subscribe(value);\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\tfunction send(data, subscribe) {\r\n\t\treturn consumer(process.map, data, process, id++, subscribe);\r\n\t}\r\n\r\n\treturn process;\r\n}\r\n"],"names":["CLEAR","Symbol","BREAK","CONTINUE","promiseIgnore","Promise","consumer","value","payload","process","id","subscribe","resolve","then","state","next","scan","generator","done","State","currentFocus","ignore","send","data","map"],"mappings":"MAAaA,EAAQC,SACRC,EAAQD,SACRE,EAAWF,SAEXG,EAAgB,IAAIC,QAAQ,QAElC,SAASC,EAASC,EAAOC,EAASC,EAASC,EAAIC,UAC9CN,QAAQO,QAAQL,GAAOM,KAAKN,GACd,mBAATA,EACHD,EACNC,EAAME,EAAQK,MAAON,GACrB,KACAC,EACAC,EACAC,GAIkB,iBAATJ,GAA0C,mBAAdA,EAAMQ,KACrC,IAAIV,QAAQO,cACTI,EAAKC,GACbZ,QAAQO,QAAQK,EAAUF,KAAKN,EAAQK,QAAQD,KAC9C,EAAGN,MAAAA,EAAOW,KAAAA,KACTZ,EAASC,EAAO,KAAME,EAASC,EAAIC,GAAWE,KAC7C,IACCK,EACGN,EAAQH,EAAQK,OAChBE,EAAKC,KAIbD,CAAKT,KAIAE,EAAQM,KAAKR,EAAOG,EAAIC,IAO1B,SAASQ,EAAML,OAIjBM,EAHAV,EAAK,EAELW,EAAS,GAETZ,EAAU,CACbK,MAAAA,EACAC,cAIaR,EAAOG,EAAIC,UAChBJ,QACFP,SACJoB,EAAeV,EACRD,EAAQK,WACXZ,SACJmB,EAAOX,IAAM,EACND,EAAQK,WACXX,SACGM,EAAQK,aAGG,MAAhBM,GAAwBA,GAAgBV,EAAWN,EAEnDiB,EAAOX,GAAYN,GAEvBK,EAAQK,MAAQP,EAEhBI,GAAaA,EAAUJ,GAEhBA,IAvBPe,cA0BaC,EAAMZ,UACZL,EAASG,EAAQe,IAAKD,EAAMd,EAASC,IAAMC,YAG5CF"}